#version 430

layout(rgba8) uniform image2D color;
readonly layout(r32f) uniform image2D depth;

uniform vec3 eyePosition;
uniform float time;

uniform ivec2 screenSize;

// Inverse view projection matrix
uniform mat4 invVP;

// Ray structure
struct Ray{
  vec3 origin;
  vec3 direction;
};

vec4 clouds(Ray r);

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main() {

    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;

    if(x >= screenSize.x || y >= screenSize.y) {
      // This is offscreen code
      // There should not be such color (sort of pink) near borders.
      imageStore(color, ivec2(x,y), vec4(1,0.3,0.5,1.0));
      return;
    }

    vec2 fCoords = vec2(x,y) / vec2(screenSize);
    ivec2 iCoords = ivec2(x,y);

    vec3 rayDir = normalize((invVP*vec4(fCoords*2-1, 1, 1)).xyz);

    vec4 c = imageLoad(color, iCoords);

    vec4 cl = clouds(Ray(eyePosition, rayDir));

    c.xyz = c.xyz*(1-cl.w) + cl.xyz*cl.w;

    imageStore(color, iCoords, c);
}

vec4 clouds(Ray r) {
  return vec4(1,1,1,0);
}
